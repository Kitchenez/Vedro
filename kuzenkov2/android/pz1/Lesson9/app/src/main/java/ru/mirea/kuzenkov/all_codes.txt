Lesson9\data\repository\MovieRepositoryImpl.java
package ru.mirea.kuzenkov.Lesson9.data.repository;

import ru.mirea.kuzenkov.Lesson9.domain.models.Movie;
import ru.mirea.kuzenkov.Lesson9.domain.repository.MovieRepository;

import android.content.Context;
import android.content.SharedPreferences;

public class MovieRepositoryImpl implements MovieRepository {

    private static final String PREFERENCES_NAME = "movie_preferences";
    private static final String KEY_MOVIE_NAME = "movie_name";
    private SharedPreferences sharedPreferences;

    public MovieRepositoryImpl(Context context) {
        sharedPreferences = context.getSharedPreferences(PREFERENCES_NAME, Context.MODE_PRIVATE);
    }

    @Override
    public boolean saveMovie(Movie movie) {
        SharedPreferences.Editor editor = sharedPreferences.edit();
        editor.putString(KEY_MOVIE_NAME, movie.getName());
        return editor.commit();
    }

    @Override
    public Movie getMovie() {
        String movieName = sharedPreferences.getString(KEY_MOVIE_NAME, "No movie found");
        return new Movie(1, movieName);
    }
}




Lesson9\domain\models\Movie.java
package ru.mirea.kuzenkov.Lesson9.domain.models;

public class Movie {
    private int id;
    private String name;

    public Movie(int id, String name) {
        this.id = id;
        this.name = name;
    }

    public String getName() {
        return name;
    }
}




Lesson9\domain\repository\MovieRepository.java
package ru.mirea.kuzenkov.Lesson9.domain.repository;

import ru.mirea.kuzenkov.Lesson9.domain.models.Movie;

public interface MovieRepository {
    boolean saveMovie(Movie movie);
    Movie getMovie();
}


Lesson9\domain\usecases\GetFavoriteFilmUseCase.java
package ru.mirea.kuzenkov.Lesson9.domain.usecases;

import ru.mirea.kuzenkov.Lesson9.domain.models.Movie;
import ru.mirea.kuzenkov.Lesson9.domain.repository.MovieRepository;

public class GetFavoriteFilmUseCase {
    private MovieRepository movieRepository;

    public GetFavoriteFilmUseCase(MovieRepository movieRepository) {
        this.movieRepository = movieRepository;
    }

    public Movie execute() {
        return movieRepository.getMovie();
    }
}




Lesson9\domain\usecases\SaveMovieToFavoriteUseCase.java
package ru.mirea.kuzenkov.Lesson9.domain.usecases;

import ru.mirea.kuzenkov.Lesson9.domain.models.Movie;
import ru.mirea.kuzenkov.Lesson9.domain.repository.MovieRepository;

public class SaveMovieToFavoriteUseCase {
    private MovieRepository movieRepository;

    public SaveMovieToFavoriteUseCase(MovieRepository movieRepository) {
        this.movieRepository = movieRepository;
    }

    public boolean execute(Movie movie) {
        if (movie.getName().isEmpty()) {
            return false;
        } else {
            return movieRepository.saveMovie(movie);
        }
    }
}


Lesson9\presentation\MainActivity.java
package ru.mirea.kuzenkov.Lesson9.presentation;

import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
import ru.mirea.kuzenkov.Lesson9.R;
import ru.mirea.kuzenkov.Lesson9.data.repository.MovieRepositoryImpl;
import ru.mirea.kuzenkov.Lesson9.domain.models.Movie;
import ru.mirea.kuzenkov.Lesson9.domain.repository.MovieRepository;
import ru.mirea.kuzenkov.Lesson9.domain.usecases.GetFavoriteFilmUseCase;
import ru.mirea.kuzenkov.Lesson9.domain.usecases.SaveMovieToFavoriteUseCase;
import android.widget.Button;


public class MainActivity extends AppCompatActivity {

    private EditText editTextMovie;
    private TextView textViewMovie;
    private MovieRepository movieRepository;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Инициализация элементов
        editTextMovie = findViewById(R.id.editTextMovie);
        textViewMovie = findViewById(R.id.textViewMovie);
        Button buttonSaveMovie = findViewById(R.id.buttonSaveMovie);
        Button buttonGetMovie = findViewById(R.id.buttonGetMovie);

        // Инициализация репозитория
        movieRepository = new MovieRepositoryImpl(this);

        // Сохранение фильма
        buttonSaveMovie.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String movieName = editTextMovie.getText().toString();
                Boolean result = new SaveMovieToFavoriteUseCase(movieRepository)
                        .execute(new Movie(2, movieName));
                textViewMovie.setText(String.format("Save result: %s", result ? "Success" : "Failed"));
            }
        });

        // Получение фильма
        buttonGetMovie.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Movie movie = new GetFavoriteFilmUseCase(movieRepository).execute();
                textViewMovie.setText(String.format("Favorite movie: %s", movie.getName()));
            }
        });
    }
}


